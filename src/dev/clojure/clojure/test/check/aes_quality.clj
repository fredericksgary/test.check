(ns clojure.test.check.aes-quality
  "Debugging dieharder failures of the AES impl."
  (:require [clojure.test.check.prng-comparison :as prngc]
            [clojure.test.check.random :as r])
  (:import [org.apache.commons.math3.distribution NormalDistribution]))

;; https://code.google.com/p/dieharder/source/browse/trunk/libdieharder/diehard_bitstream.c?r=494
;;
;; Let's do the non-overlapping variant, seems easier to decompose

(def expected-mean 141909)
;; how on earth do we use this?
(def expected-sigma 290.0)

(defn stats
  [xs]
  (let [c              (double (count xs))
        mean           (/ (reduce + xs) c)
        variance       (/ (->> xs
                               (map #(- mean %))
                               (map #(* % %))
                               (reduce +))
                          c)
        sigma          (Math/sqrt variance)
        standard-error (/ expected-sigma (count xs))
        z-score        (/ (- mean expected-mean) standard-error)
        cdf-value      (.cumulativeProbability
                        (NormalDistribution.)
                        z-score)
        p-value        (-> cdf-value
                           (cond->> (> cdf-value 0.5)
                                    (- 1))
                           (* 2))]
    {:mean     mean
     :sigma    sigma
     :variance variance
     :z-score  z-score
     :p-value  p-value}))

(defn longs->w20s
  [the-longs]
  (->> the-longs
       (mapcat (fn [the-long]
                 (->> (iterate #(bit-shift-right % 4) the-long)
                      (map #(bit-and % 15))
                      (take 16))))
       (partition 5)
       (map (fn [xs]
              (->> xs
                   (map-indexed (fn [i x]
                                  (bit-shift-left x (* 4 i))))
                   (reduce +))))))

(defonce all-w20s
  (set (range 16r100000)))

(defn diehard-bitstream
  [the-longs]
  (->> the-longs
       (longs->w20s)
       (take 16r200000)
       (set)
       (clojure.set/difference all-w20s)
       (count)))

(defn some-balanced-AES-longs
  ([] (some-balanced-AES-longs (System/currentTimeMillis)))
  ([seed]
     ((prngc/linearization-strategies :balanced-63)
      (r/make-aes-random seed seed))))

(defn some-linear-AES-longs
  ([] (some-balanced-AES-longs (System/currentTimeMillis)))
  ([seed]
     ((prngc/linearization-strategies :left-linear)
      (r/make-aes-random seed seed))))

(defn some-balanced-siphash-longs
  ([] (some-balanced-siphash-longs (System/currentTimeMillis)))
  ([seed]
     ((prngc/linearization-strategies :balanced-63)
      (r/make-siphash-random seed))))

(comment

  (def AES-results (atom []))
  (./bg bg-AES
    (com.gfredericks.repl/forever
     (swap! AES-results conj
            (diehard-bitstream (some-linear-AES-longs)))))

  (def siphash-results (atom []))
  (./bg bg-siphash
    (com.gfredericks.repl/forever
     (swap! siphash-results conj
            (diehard-bitstream (some-balanced-siphash-longs)))))

  (def AES-balanced-results
    [141622 142119 141391 142196 141315 141670 141738 141821
     141897 141412 142166 142307 142045 141945 141229 141535
     141448 141487 142061 141926 142490 142099 142652 141810
     141982 141554 141471 141852 142229 141555 142058 141458
     141766 142014 141856 142321 141976 141898 142112 141757
     142638 142220 141702 141449 142030 141204 141768 142050
     141990 141922 141704 141821 141481 142076 141157 141384
     141932 142015 142214 142032 141895 141922 142762 141785
     141712 141855 141901 141193 141993 142613 141623 142014
     141797 142218 142104 141814 141484 142407 141830 141574
     141841 141904 142558 141963 141811 142149 142391 141923
     142151 141271 141856 141588 141842 141546 141796 142036
     141893 141863 141940 141750 141504 141693 141700 141856
     142149 142113 142242 141769 142011 141456 141554 141660
     141943 141720 142371 141969 141976 141678 142503 142031
     142023 141539 141935 141964 142078 141907 141783 142296
     142105 142106 141704 142180 142069 142048 142261 142054
     141922 141893 142169 142000 141920 142099 142399 142179
     141956 141699 142353 141648 142234 141714 141919 142109
     141790 141789 142070 141783 142033 142264 141947 142142
     141535 142078 141788 141639 142264 141942 141886 141961
     141722 141982 141800 141975 141588 141371 142240 142436
     141910 142356 141805 141977 141673 142051 142050 142058
     141338 142111 141799 141947 141800 142542 141992 141393
     141965 142079 141961 141743 142009 141957 142030 141839
     141271 141406 141786 142610 141871 142142 142327 141666
     141730 141767 142182 142402 141740 141871 142037 141640
     142064 141949 141752 141909 141730 141799 141554 141924
     142001 142019 141238 142056 142128 142233 142411 142103
     141632 141938 141680 141796 141797 141836 142159 141629
     141814 142099 141715 141512 141985 141933 141696 142007
     142117 142197 142102 141573 141405 141926 141985 141798
     142167 142283 141697 142065 141702 141638 141648 141954
     141627 142193 141673 141520 142307 141839 141869 142171
     141789 141747 141742 141233 141710 141917 141760 141139
     141689 141401 141942 141966 141835 142684 141668 142026
     142018 141222 141707 141526 141690 141884 142324 142234
     142337 142376 142075 141696 141915 142148 142112 142152
     141934 142198 142546 142336 142073 141794 141862 142473
     141890 142173 141799 141586 142342 142118 141870 141514
     141871 141893 141638 141873 141750 141411 141740 142087
     141987 142314 141778 141415 141901 141758 141943 142003
     142108 141682 141601 142124 142037 141462 142274 141992
     141681 141887 141949 141685 142333 141309 141836 142045
     141425 142299 141765 141543 141816 142028 141634 141554
     141859 141770 141769 141737 142325 142505 142016 141746
     142038 141991 142284 141894 141608 141553 141795 141938
     141703 141409 141561 142060 142272 141998 141979 141688
     141951 141596 141531 141504 141640 142040 142471 141751
     142029 141671 141716 142001 141919 141973 141692 141763
     141883 142051 141838 141390 141583 141642 141994 142341
     141743 142112 141756 141980 142140 141874 141969 141885
     142018 142441 141522 141719 142077 141506 141751 141986
     141682 141816 142249 142359 141429 141573 141848 142229
     142132 142285 142371 142022 142152 142119 141676 142397
     142230 142174 141884 142088 142237 141994 141439 141910
     141683 141926 141555 141519 141807 142558 141657 141921
     141866 141466 141836 141874 141903 142141 141758 141378
     141956 141322 142321 142065 141993 141812 141677 142036
     142105 142089 142065 142680 141826 141524 142447 142216
     141215 141396 142270 141312 142094 141913 141642 141467
     142442 142320 141964 142079 141689 141638 141968 142536
     142277 142427 141899 141425 142316 141245 142354 141765
     142164 141572 141593 141816 141900 142674 142063])

  (def AES-linear-results
    [142238 141645 142299 141523 142259 141985 142449 141667
     141556 142335 142487 141909 142318 141906 141933 142204
     142029 141675 141633 141700 141447 141799 142436 142096
     142312 141721 141985 141669 141591 141839 141622 142473
     141891 141825 141730 141925 141420 141941 141851 141871
     142083 141923 141983 142016 142038 142109 142182 141735
     141786 142779 142119 141530 142310 141702 141995 141635
     141505 141632 141874 141921 141771 141573 141653 142138
     142343 141501 140924 141968 141918 141819 141654 141621
     141814 142025 141605 142195 141404 142012 141784 142257
     141701 142214 141680 141797 141273 142050 141223 142184
     142216 141418 141972 142004 141873 141900 142086 141385
     141926 142052 141844 142370 141897 142367 141911 141874
     142359 141584 141637 142170 142004 141824 141991 141946
     141512 141719 141221 141597 141722 142147 141747 142085
     141965 141682 142209 141849 142323 142130 142098 141862
     142018 141928 142108 142100 141836 142147 142613 141653
     141718 141516 141861 141622 141357 142011 141950 141824
     141683 142038 142005 141778 142193 141628 141707 142481
     141311 142272 142190 142055 141678 142265 142115 142363
     141763 141637 141672 141865 142746 141820 142235 142164
     141662 141605 141906 141928 141522 141635 141794 142031
     141807 142288 142065 141976 141987 141677 142006 141494
     141889 141118 141601 141933 141569 142067 141856 141459
     142209 142310 141894 141900 142345 141902 141786 142177
     141505 141605 141889 141748 142289 141748 141554 142059
     141910 141432 141766 141879 141782 142150 141750 141746
     141716 141527 142030 141659 141933])

  (def siphash-results
    [142304 141765 142565 142033 142102 142179 141931 141678
     141404 141884 141715 141610 142051 142004 141429 141831
     141917 141862 141473 141786 141905 141782 142260 141703
     142181 141561 142169 142006 141787 142038 141973 141955
     141700 141929 141951 141953 142190 142170 142138 141795
     141818 141414 142350 142168 142371 141720 141581 142286
     142023 141407 142493 142149 142558 142205 141543 142030
     142196 141852 142155 141992 142097 142371 141526 141828
     142073 141518 142027 141637 141857 142252 141896 141995
     142616 141915 142203 142162 141873 141488 141726 141607
     141538 141450 141763 141965 142157 141768 142056 141383
     141663 141457 142065 141909 141689 142130 141517 141879
     141972 142056 141682 141592 142313 142189 141639 142346
     141736 142343 141744 141337 141799 141916 142193 141507
     141540 141949 141860 141767 141608 141295 142336 141951
     141387 142001 141679 142555 141763 142064 142360 141811
     141743 141792 141833 141611 142252 142116 142261 141745
     142250 142193 142111 141491 142380 142182 142260 141737
     141962 141848 141760 141760 141426 141687 141697 141847
     141593 142158 141660 142059])

  )
